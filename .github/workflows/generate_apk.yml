
name: Generate apk for QA

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch

  #push:
  #  tags:
  #    - 'android_v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "11.x"

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - run: flutter pub get

      # - name: Download Android keystore
      #   id: android_keystore
      #   uses: timheuer/base64-to-file@v1.0.3
      #   with:
      #     fileName: key.jks
      #     encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      # - name: Create key.properties
      #   run: |
      #     echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
      #     echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
      #     echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android APK
        run: flutter build apk --split-per-abi
        
      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
       
